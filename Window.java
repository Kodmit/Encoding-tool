import javax.swing.JFrame;
import java.awt.Color;
import java.awt.SystemColor;
import javax.swing.JLabel;
import java.awt.Font;
import javax.swing.JTextField;
import javax.swing.GroupLayout;
import javax.swing.GroupLayout.Alignment;
import javax.swing.LayoutStyle.ComponentPlacement;
import javax.swing.JPasswordField;
import javax.swing.JButton;
import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;
 
public class Window {
    private JTextField txtAccessPath;
    private JPasswordField passwordField;
    public String accesspath;
   
    public Window(){
       
       
       
    }
                              // This code was auto-generated by WindowBuilder for Eclipse, so I will just comment my code, see bellow
    /**
     * @wbp.parser.entryPoint
     */
    public void openWindow(){
       
        JFrame window = new JFrame();
        window.setResizable(false);
        window.getContentPane().setBackground(SystemColor.controlDkShadow);
       
        JLabel lblNewLabel = new JLabel("");
       
        JLabel lblEncode = new JLabel("Encoding & Decoding tool");
        lblEncode.setForeground(SystemColor.menu);
        lblEncode.setFont(new Font("Arial", Font.PLAIN, 28));
       
        txtAccessPath = new JTextField();
        txtAccessPath.setToolTipText("Eg: C:\\image.jpg");
        txtAccessPath.setBackground(SystemColor.menu);
        txtAccessPath.setColumns(10);
       
        passwordField = new JPasswordField();
       
        JLabel lblEncryptionKey = new JLabel("Your encoding / decoding key :");
        lblEncryptionKey.setForeground(Color.WHITE);
       
        JButton btnDecodeThat = new JButton("Encode or Decode");
        btnDecodeThat.setForeground(SystemColor.text);
        btnDecodeThat.setBackground(SystemColor.textHighlight);
        btnDecodeThat.setFont(new Font("Raleway Medium", Font.PLAIN, 16));
        btnDecodeThat.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent arg0) {       // When the user click on the button
                String pass = new String(passwordField.getPassword());    // convert the pass to a string
                Main data = new Main();        // declare main class
                data.execute(pass, txtAccessPath.getText());  // execute the function in main
            } // end
        });
        
        JLabel lblTheProgramAutodetect = new JLabel("The program auto-detect if the file is encoded or not");
        lblTheProgramAutodetect.setForeground(Color.WHITE);
        
        JLabel lblCompletePathTo = new JLabel("Complete path to the file (with extension) : ");
        lblCompletePathTo.setForeground(Color.WHITE);
        GroupLayout groupLayout = new GroupLayout(window.getContentPane());
        groupLayout.setHorizontalGroup(
        	groupLayout.createParallelGroup(Alignment.LEADING)
        		.addGroup(groupLayout.createSequentialGroup()
        			.addGap(197)
        			.addComponent(passwordField, GroupLayout.PREFERRED_SIZE, 251, GroupLayout.PREFERRED_SIZE)
        			.addContainerGap(249, Short.MAX_VALUE))
        		.addGroup(groupLayout.createSequentialGroup()
        			.addGap(231)
        			.addComponent(lblEncryptionKey, GroupLayout.PREFERRED_SIZE, 177, GroupLayout.PREFERRED_SIZE)
        			.addContainerGap(289, Short.MAX_VALUE))
        		.addGroup(groupLayout.createSequentialGroup()
        			.addComponent(lblNewLabel)
        			.addGroup(groupLayout.createParallelGroup(Alignment.LEADING)
        				.addGroup(groupLayout.createSequentialGroup()
        					.addGap(222)
        					.addComponent(btnDecodeThat, GroupLayout.PREFERRED_SIZE, 210, GroupLayout.PREFERRED_SIZE))
        				.addGroup(groupLayout.createSequentialGroup()
        					.addGap(200)
        					.addComponent(lblTheProgramAutodetect)))
        			.addContainerGap(245, Short.MAX_VALUE))
        		.addGroup(groupLayout.createSequentialGroup()
        			.addGap(152)
        			.addComponent(lblEncode, GroupLayout.PREFERRED_SIZE, 339, GroupLayout.PREFERRED_SIZE)
        			.addContainerGap(206, Short.MAX_VALUE))
        		.addGroup(groupLayout.createSequentialGroup()
        			.addGap(21)
        			.addGroup(groupLayout.createParallelGroup(Alignment.LEADING)
        				.addGroup(groupLayout.createSequentialGroup()
        					.addComponent(lblCompletePathTo, GroupLayout.PREFERRED_SIZE, 252, GroupLayout.PREFERRED_SIZE)
        					.addContainerGap())
        				.addGroup(groupLayout.createSequentialGroup()
        					.addComponent(txtAccessPath, GroupLayout.DEFAULT_SIZE, 636, Short.MAX_VALUE)
        					.addGap(40))))
        );
        groupLayout.setVerticalGroup(
        	groupLayout.createParallelGroup(Alignment.LEADING)
        		.addGroup(groupLayout.createSequentialGroup()
        			.addGap(18)
        			.addComponent(lblEncode)
        			.addGap(18)
        			.addGroup(groupLayout.createParallelGroup(Alignment.LEADING)
        				.addGroup(Alignment.TRAILING, groupLayout.createSequentialGroup()
        					.addComponent(lblEncryptionKey)
        					.addGap(4)
        					.addComponent(passwordField, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
        					.addGap(18)
        					.addComponent(lblCompletePathTo)
        					.addPreferredGap(ComponentPlacement.RELATED)
        					.addComponent(txtAccessPath, GroupLayout.PREFERRED_SIZE, 20, GroupLayout.PREFERRED_SIZE)
        					.addGap(30))
        				.addComponent(lblNewLabel, Alignment.TRAILING))
        			.addContainerGap(22, Short.MAX_VALUE))
        		.addGroup(Alignment.TRAILING, groupLayout.createSequentialGroup()
        			.addContainerGap(183, Short.MAX_VALUE)
        			.addComponent(lblTheProgramAutodetect)
        			.addPreferredGap(ComponentPlacement.UNRELATED)
        			.addComponent(btnDecodeThat)
        			.addContainerGap())
        );
        window.getContentPane().setLayout(groupLayout);
       
        window.setTitle("Encode & Decode");
        window.setSize(703, 275);
        window.setLocationRelativeTo(null);
        window.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        window.setVisible(true);
    }
}